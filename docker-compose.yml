version: '3'

services:
  backend:
    container_name: backend
    build: 
      context: backend
      dockerfile: Dockerfile.dev
    image: backend
    env_file: .env
    volumes:
      - type: bind
        source: ./backend/src
        target: /app/src
    ports:
      - '4000:3001'
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - backend

  frontend:
    container_name: frontend
    build: 
      context: frontend
      dockerfile: Dockerfile.dev
    image: frontend
    env_file: .env
    environment:
      CHOKIDAR_USEPOLLING: 'true'
    volumes:
      - type: bind
        source: ./frontend/src
        target: /app/src
    ports:
      - '8081:3000'
    networks:
      - frontend
  
  postgres:
    container_name: postgres
    image: postgres:14-alpine
    env_file: .env
    restart: unless-stopped
    volumes: 
      - postgres_data:/var/lib/postgresql/data/pgdata
    networks:
      - backend

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - 8080:8080
    depends_on:
      - postgres
    networks:
      - backend
volumes:
  postgres_data:
networks:
  backend:
  frontend: